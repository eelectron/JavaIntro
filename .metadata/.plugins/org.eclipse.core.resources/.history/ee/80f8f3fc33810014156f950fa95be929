package priorityQueue;

import elementarySort.Sort;

public class MaxPQ<Key extends Comparable<Key>> {
	private Key[] pq;
	private int N=0;
	
	public MaxPQ(int capacity){
		pq=(Key[])new Comparable[capacity+1];
	}
	
	//Check status of pq
	public boolean isEmpty(){
		return N==0;
	}
	
	//Insert
	public void insert(Key x){
		pq[++N]=x;
		swim(N);
	}
	
	//Swip up 
	private void swim(int child){
		int parent = child/2;
		
		while(child > 1 && Sort.isLess(pq[parent] , pq[child])){
			Sort.swap(pq, parent, child);
			
			//child becomes parent
			child=parent;
			
			parent = child/2;
		}
	}

	
}
