package bst;

public class RedBlackBST {
	private static final boolean RED = true;
	private static final boolean BLACK = true;
	
	private class Node{
		Key key;
		Value value;
		Node left,right;
		boolean color;		//color of parent link
	}
	
	private boolean isRed(Node x){
		if(x==null)return false;
		return x.color == RED;
	}
	
	//Perform left rotation
	private Node rotateLeft(Node currentNode){
		assert(isRed(currentNode.right));
		
		Node newNode = currentNode.right;
		currentNode.right = newNode.left;
		newNode.left = currentNode;
		newNode.color = currentNode.color;
		currentNode.color = RED;
		return newNode;
	}
	
	//Perform right rotation
	private Node rotateRight(Node currentNode){
		assert(isRed(currentNode.left));
		
		Node newNode = currentNode.left;
		currentNode.left = newNode.right;
		newNode.right = currentNode;
		newNode.color = currentNode.color;
		currentNode.color = RED;
		return newNode;
	}
	
	private void flipColors(Node h){
		assert(!isRed(h));
		assert(isRed(h.left));
		assert(isRed(h.right));
	}
}